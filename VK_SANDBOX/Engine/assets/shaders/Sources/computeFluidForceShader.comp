#version 450

struct FluidParticle
{
	vec4 position;
	vec4 velocity;
    vec4 color;
};
layout (std140, binding = 0) uniform ParameterUBO
{
    float deltaTime; 
    float accumulatedTime;
} ubo;

layout(std430, binding = 1) readonly buffer ParticleSSBOIn 
{
   FluidParticle particlesIn[ ];
};

layout(std430, binding = 2) buffer ParticleSSBOOut 
{
   FluidParticle particlesOut[ ];
};

layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;
// Particle Count: 65536
// Thread Count per work group : 256
// Work Group Count: 65536/256
// Group1 0~255, Group2 256~511...

void main() 
{
    uint index = gl_GlobalInvocationID.x;  // 0 ~ 65536
    FluidParticle particleIn = particlesIn[index];

    particlesOut[index].position = particleIn.position + vec4(0,-1,0,0)  * ubo.deltaTime ;//+ particleIn.velocity * ubo.deltaTime;  
    particlesOut[index].velocity = vec4(-1,-1,-1,-1);//particleIn.velocity;
    particlesOut[index].color = particleIn.color;


}
